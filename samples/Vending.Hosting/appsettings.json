{
    "Serilog": {
        "Using": [
            "Serilog.Enrichers.Environment",
            "Serilog.Enrichers.Process",
            "Serilog.Enrichers.Thread",
            "Serilog.Sinks.Async",
            "Serilog.Sinks.Console",
            "Serilog.Sinks.File"
        ],
        "MinimumLevel": {
            "Default": "Information",
            "Override": {
                "System": "Warning",
                "Microsoft": "Warning"
            }
        },
        "Enrich": [
            "FromLogContext",
            "WithMachineName",
            "WithProcessId",
            "WithThreadId"
        ],
        "WriteTo:Async": {
            "Name": "Async",
            "Args": {
                "configure": [
                    {
                        "Name": "Console"
                    },
                    {
                        "Name": "File",
                        "Args": {
                            "path": "./Logs/log.txt",
                            "outputTemplate": "{Timestamp:o} [{Level:u3}] ({Application}/{MachineName}/{ThreadId}) {Message}{NewLine}{Exception}"
                        }
                    }
                ]
            }
        }
    },
    "AllowedHosts": "*",
    "ConnectionStrings": {
        "VendingDomain": "Server=123.60.184.85;Integrated Security=False;User Id=sa;Password=Bosshong2010;TrustServerCertificate=True;Database=VendingDomain",
        "VendingProjection": "Server=123.60.184.85;Integrated Security=False;User Id=sa;Password=Bosshong2010;TrustServerCertificate=True;Database=VendingProjection",
        "RedisCluster": "123.60.184.85:6379,defaultDatabase=0",
        "SqlServerCluster": "Server=123.60.184.85;Integrated Security=False;User Id=sa;Password=Bosshong2010;TrustServerCertificate=True;Database=VendingCluster",
        "Redis-GrainDirectory": "123.60.184.85:6379,defaultDatabase=0",
        "RedisReminders": "123.60.184.85:6379,defaultDatabase=0",
        "SqlServerReminders": "Server=123.60.184.85;Integrated Security=False;User Id=sa;Password=Bosshong2010;TrustServerCertificate=True;Database=VendingReminders",
        "EventStoreLogConsistency1": "esdb://123.60.184.85:2113?tls=false",
        "EventStoreLogConsistency2": "esdb://123.60.184.85:2113?tls=false",
        "PubSubStore": "123.60.184.85:6379,defaultDatabase=10",
        "RedisStore1": "123.60.184.85:6379,defaultDatabase=1",
        "RedisStore2": "123.60.184.85:6379,defaultDatabase=2",
        "SqlServerStore1": "Server=123.60.184.85;Integrated Security=False;User Id=sa;Password=Bosshong2010;TrustServerCertificate=True;Database=VendingStore1",
        "SqlServerStore2": "Server=123.60.184.85;Integrated Security=False;User Id=sa;Password=Bosshong2010;TrustServerCertificate=True;Database=VendingStore2",
        "EventStoreStore1": "esdb://123.60.184.85:2113?tls=false",
        "EventStoreStore2": "esdb://123.60.184.85:2113?tls=false",
        "EventStoreStream1": "esdb://123.60.184.85:2113?tls=false",
        "EventStoreStream2": "esdb://123.60.184.85:2113?tls=false",
        "EventStoreCheckpoint1": "esdb://123.60.184.85:2113?tls=false",
        "EventStoreCheckpoint2": "esdb://123.60.184.85:2113?tls=false"
    },
    "Vending": {
        "Domain": {
            "EFCore": {
                "ProviderName": "VendingDomain",
                "MaxRetry": 5,
                "MaxRetryDelay": "00:00:05"
            }
        },
        "Projection": {
            "EFCore": {
                "ProviderName": "VendingProjection",
                "MaxRetry": 5,
                "MaxRetryDelay": "00:00:05"
            }
        },
        "Hosting": {
            "Dashboard": {
                "Host": "localhost",
                "BasePath": "/dashboard",
                "Port": 8080
            }
        }
    },
    "Orleans": {
        "Server": {
            "AdvertisedIPAddress": "127.0.0.1",
            "SiloPort": 11111,
            "GatewayPort": 30000,
            "SiloName": "VendingSilo1"
        },
        "Clustering": {
            "UsedByClient": false,
            "ServiceId": "VendingService",
            "ClusterId": "VendingCluster",
            "InMemory": {
                "LocalServiceId": "VendingService",
                "LocalClusterId": "VendingCluster",
                "LocalSiloPort": 11111,
                "LocalGatewayPort": 30000
            },
            "Redis": {
                "ProviderName": "RedisCluster"
            },
            "AdoNet": {
                "ProviderName": "SqlServerCluster",
                "DbProvider": "SQLServer"
            }
        },
        "Reminders": {
            "MinimumRemindersPeriod": "00:01:00",
            "RefreshRemindersListPeriod": "00:05:00",
            "InitializationTimeout": "00:10:00",
            "Redis": {
                "ProviderName": "RedisReminders"
            },
            "AdoNet": {
                "ProviderName": "SqlServerReminders",
                "DbProvider": "SQLServer"
            }
        },
        "EventSourcing": {
            "InMemory": {
                "LogConsistencies": [
                    {
                        "ProviderName": "InMemoryLogConsistency1",
                        "LogProvider": "LogBased"
                    },
                    {
                        "ProviderName": "InMemoryLogConsistency2",
                        "LogProvider": "StateBased"
                    }
                ]
            },
            "EventStore": {
                "LogConsistencies": [
                    {
                        "ProviderName": "EventStoreLogConsistency1"
                    },
                    {
                        "ProviderName": "EventStoreLogConsistency2"
                    }
                ]
            }
        },
        "Persistence": {
            "InMemory": {
                "Storages": [
                    {
                        "ProviderName": "InMemoryStore1",
                        "NumStorageGrains": 10
                    },
                    {
                        "ProviderName": "InMemoryStore2",
                        "NumStorageGrains": 20
                    }
                ]
            },
            "Redis": {
                "Storages": [
                    {
                        "ProviderName": "RedisStore1",
                        "DeleteStateOnClear": true
                    },
                    {
                        "ProviderName": "RedisStore2",
                        "DeleteStateOnClear": false
                    },
                    {
                        "ProviderName": "PubSubStore",
                        "DeleteStateOnClear": true
                    }
                ]
            },
            "AdoNet": {
                "Storages": [
                    {
                        "ProviderName": "SqlServerStore1",
                        "DbProvider": "SQLServer"
                    },
                    {
                        "ProviderName": "SqlServerStore2",
                        "DbProvider": "SQLServer"
                    }
                ]
            },
            "EventStore": {
                "Storages": [
                    {
                        "ProviderName": "EventStoreStore1",
                        "DeleteStateOnClear": true
                    },
                    {
                        "ProviderName": "EventStoreStore2",
                        "DeleteStateOnClear": false
                    }
                ]
            }
        },
        "Streaming": {
            "UsedByClient": false,
            "Broadcasts": [
                {
                    "ProviderName": "Broadcasts1",
                    "FireAndForgetDelivery": true
                },
                {
                    "ProviderName": "Broadcasts2",
                    "FireAndForgetDelivery": false
                }
            ],
            "InMemory": {
                "Streams": [
                    {
                        "ProviderName": "InMemoryStream1",
                        "NumQueues": 2,
                        "BatchContainerBatchSize": 4,
                        "QueueBalancerMode": "ConsistentRing"
                    },
                    {
                        "ProviderName": "InMemoryStream2",
                        "NumQueues": 4,
                        "BatchContainerBatchSize": 2,
                        "QueueBalancerMode": "ConsistentRing"
                    }
                ]
            },
            "EventStore": {
                "Streams": [
                    {
                        "ProviderName": "EventStoreStream1",
                        "Name": "VendingEventStore1",
                        "Queues": [
                            "Vending-101",
                            "Vending-102"
                        ],
                        "PrefetchCount": 20,
                        "StartFromNow": true,
                        "BatchContainerBatchSize": 1,
                        "QueueBalancerMode": "ConsistentRing",
                        "CheckpointProviderName": "EventStoreCheckpoint1"
                    },
                    {
                        "ProviderName": "EventStoreStream2",
                        "Name": "VendingEventStore2",
                        "Queues": [
                            "Vending-201",
                            "Vending-202",
                            "Vending-203",
                            "Vending-204"
                        ],
                        "PrefetchCount": 50,
                        "StartFromNow": false,
                        "BatchContainerBatchSize": 4,
                        "QueueBalancerMode": "ConsistentRing",
                        "CheckpointProviderName": "EventStoreCheckpoint2"
                    }
                ]
            }
        },
        "Transactions": {
            "UsedByClient": false
        }
    }
}