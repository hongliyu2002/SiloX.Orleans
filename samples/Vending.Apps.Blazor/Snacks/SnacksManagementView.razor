@page "/snacks"
@inherits ReactiveInjectableComponentBase<SnacksManagementViewModel>
@if (ViewModel != null)
{
    <MudGrid>
        <MudItem xs="12">
            <MudAlert Severity="Severity.Error" Variant="Variant.Filled" ShowCloseIcon="true" Style="@(ViewModel.ErrorInfo.IsNotNullOrEmpty() ? "display:block" : "display:none")">@ViewModel.ErrorInfo</MudAlert>
        </MudItem>
        <MudItem xs="12" sm="12" md="5" lg="4" xl="3">
            <MudGrid>
                <MudItem xs="12">
                    <MudButton StartIcon="@Icons.Material.Filled.Add" Command="@ViewModel.AddSnackCommand" Variant="Variant.Outlined" Margin="@Margin.Dense" Color="Color.Primary">Add</MudButton>
                    <MudButton StartIcon="@Icons.Material.Filled.Remove" Command="@ViewModel.RemoveSnackCommand" Variant="Variant.Outlined" Margin="@Margin.Dense" Color="Color.Warning">Remove</MudButton>
                    <MudButton StartIcon="@Icons.Material.Filled.SwapHoriz" Command="@ViewModel.MoveNavigationSideCommand" Variant="Variant.Outlined" Margin="@Margin.Dense" Color="Color.Default">Move Side</MudButton>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField T="string" Label="Search" @bind-Text="@ViewModel.SearchTerm" Immediate="true" Variant="Variant.Outlined" Margin="Margin.Dense" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" />
                </MudItem>
                <MudItem xs="12">
                    <MudList Clickable="true" @bind-SelectedValue="@ViewModel.CurrentSnack" Color="Color.Primary">
                        <MudListSubheader>
                            Your choice:
                            <MudChip Color="Color.Secondary">
                                @(ViewModel.CurrentSnack == null ? "None" : ((SnackViewModel)ViewModel.CurrentSnack).Name)
                            </MudChip>
                        </MudListSubheader>
                        @foreach (var snack in ViewModel.Snacks)
                        {
                            <MudListItem Value="snack" Disabled="@snack.IsDeleted">
                                <SnackView ViewModel="snack" />
                            </MudListItem>
                        }
                    </MudList>
                </MudItem>
            </MudGrid>
        </MudItem>
        <MudItem xs="12" sm="12" md="7" lg="8" xl="9">
            @if(ViewModel.CurrentSnackEdit != null)
            {
                <SnackEditView EditViewModel="@ViewModel.CurrentSnackEdit" />
            }
        </MudItem>
    </MudGrid>
}
else
{
    <MudProgressCircular Color="Color.Info" Indeterminate="true" />
}
