{
    "Serilog": {
        "Using": [
            "Serilog.Enrichers.Environment",
            "Serilog.Enrichers.Process",
            "Serilog.Enrichers.Thread",
            "Serilog.Sinks.Async",
            "Serilog.Sinks.Console",
            "Serilog.Sinks.File"
        ],
        "MinimumLevel": {
            "Default": "Information",
            "Override": {
                "System": "Warning",
                "Microsoft": "Warning"
            }
        },
        "Enrich": [
            "FromLogContext",
            "WithMachineName",
            "WithProcessId",
            "WithThreadId"
        ],
        "WriteTo:Async": {
            "Name": "Async",
            "Args": {
                "configure": [
                    {
                        "Name": "Console"
                    },
                    {
                        "Name": "File",
                        "Args": {
                            "path": "./Logs/log.txt",
                            "outputTemplate": "{Timestamp:o} [{Level:u3}] ({Application}/{MachineName}/{ThreadId}) {Message}{NewLine}{Exception}"
                        }
                    }
                ]
            }
        }
    },
    "AllowedHosts": "*",
    "ConnectionStrings": {
        "Redis-Cluster": "123.60.184.85:6379,defaultDatabase=0",
        "SqlServer-Cluster": "Server=123.60.184.85;Integrated Security=False;User Id=sa;Password=Bosshong2010;TrustServerCertificate=True;Database=Cluster",
        "Redis-GrainDirectory": "123.60.184.85:6379,defaultDatabase=0",
        "Redis-Reminders": "123.60.184.85:6379,defaultDatabase=0",
        "SqlServer-Reminders": "Server=123.60.184.85;Integrated Security=False;User Id=sa;Password=Bosshong2010;TrustServerCertificate=True;Database=Reminders",
        "Redis-Grain-Storage-1": "123.60.184.85:6379,defaultDatabase=1",
        "Redis-Grain-Storage-2": "123.60.184.85:6379,defaultDatabase=2",
        "SqlServer-Grain-Storage-1": "Server=123.60.184.85;Integrated Security=False;User Id=sa;Password=Bosshong2010;TrustServerCertificate=True;Database=Grain-Storage-1",
        "SqlServer-Grain-Storage-2": "Server=123.60.184.85;Integrated Security=False;User Id=sa;Password=Bosshong2010;TrustServerCertificate=True;Database=Grain-Storage-2",
        "EventStore-Grain-Storage-1": "esdb://123.60.184.85:2113?tls=false",
        "EventStore-Grain-Storage-2": "esdb://123.60.184.85:2113?tls=false",
        "EventStore-EventSourcing-1": "esdb://123.60.184.85:2113?tls=false",
        "EventStore-EventSourcing-2": "esdb://123.60.184.85:2113?tls=false"
    },
    "Orleans": {
        "Server": {
            "AdvertisedIPAddress": "127.0.0.1",
            "SiloPort": 11111,
            "GatewayPort": 30000,
            "SiloName": "Test-Silo"
        },
        "Clustering": {
            "UsedByClient": false,
            "ServiceId": "Test-Service",
            "ClusterId": "Test-Cluster",
            "InMemory": {
                "LocalServiceId": "Test-Service",
                "LocalClusterId": "Test-Cluster",
                "LocalSiloPort": 11111,
                "LocalGatewayPort": 30000
            },
            "Redis": {
                "ProviderName": "Redis-Cluster"
            },
            "AdoNet": {
                "ProviderName": "SqlServer-Cluster",
                "DbProvider": "SQLServer"
            }
        },
        "Reminders": {
            "MinimumRemindersPeriod": "00:01:00",
            "RefreshRemindersListPeriod": "00:05:00",
            "InitializationTimeout": "00:10:00",
            "InMemory": {
            },
            "Redis": {
                "ProviderName": "Redis-Reminders"
            },
            "AdoNet": {
                "ProviderName": "SqlServer-Reminders",
                "DbProvider": "SQLServer"
            }
        },
        "Persistence": {
            "InMemory": {
                "Storages": [
                    {
                        "ProviderName": "InMemory-Grain-Storage-1",
                        "NumStorageGrains": 10
                    },
                    {
                        "ProviderName": "InMemory-Grain-Storage-2",
                        "NumStorageGrains": 20
                    }
                ]
            },
            "Redis": {
                "Storages": [
                    {
                        "ProviderName": "Redis-Grain-Storage-1",
                        "DeleteStateOnClear": true
                    },
                    {
                        "ProviderName": "Redis-Grain-Storage-2",
                        "DeleteStateOnClear": false
                    }
                ]
            },
            "AdoNet": {
                "Storages": [
                    {
                        "ProviderName": "SqlServer-Grain-Storage-1",
                        "DbProvider": "SQLServer"
                    },
                    {
                        "ProviderName": "SqlServer-Grain-Storage-2",
                        "DbProvider": "SQLServer"
                    }
                ]
            },
            "EventStore": {
                "Storages": [
                    {
                        "ProviderName": "EventStore-Grain-Storage-1",
                        "DeleteStateOnClear": true
                    },
                    {
                        "ProviderName": "EventStore-Grain-Storage-2",
                        "DeleteStateOnClear": false
                    }
                ]
            }
        },
        "EventSourcing": {
            "InMemory": {
                "LogConsistencies": [
                    {
                        "ProviderName": "InMemory-EventSourcing-1",
                        "LogProvider": "LogBased"
                    },
                    {
                        "ProviderName": "InMemory-EventSourcing-2",
                        "LogProvider": "StateBased"
                    }
                ]
            },
            "EventStore": {
                "LogConsistencies": [
                    {
                        "ProviderName": "EventStore-EventSourcing-1"
                    },
                    {
                        "ProviderName": "EventStore-EventSourcing-2"
                    }
                ]
            }
        }
    }
}